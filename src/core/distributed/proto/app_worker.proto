/*
 * SPDX-FileCopyrightText: Copyright (c) 2023-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package holoscan.distributed;

import "connection_item.proto";
import "error_code.proto";
import "result.proto";
import "multi_fragment_port_info.proto";

message AvailablePortsRequest {
  uint32 number_of_ports = 1;
  uint32 min_port = 2;
  uint32 max_port = 3;
  repeated uint32 used_ports = 4;
}

message AvailablePortsResponse {
  repeated uint32 unused_ports = 1;
}

message ConnectionItemList {
  repeated ConnectionItem connections = 1;
}

message FragmentExecutionRequest {
  map<string, ConnectionItemList> fragment_connections_map = 1;
}

message FragmentExecutionResponse {
  Result result = 1;
}

message FragmentInfoRequest {
  repeated string fragment_names = 1;
}

message FragmentInfoResponse {
  MultiFragmentPortInfo multi_fragment_port_info = 1;
}

message TerminateWorkerRequest {
  ErrorCode code = 1;
}

message TerminateWorkerResponse {
  Result result = 1;
}

service AppWorkerService {
  rpc GetAvailablePorts(AvailablePortsRequest) returns (AvailablePortsResponse) {}
  rpc GetFragmentInfo(FragmentInfoRequest) returns (FragmentInfoResponse) {}
  rpc ExecuteFragments(FragmentExecutionRequest) returns (FragmentExecutionResponse) {}
  rpc TerminateWorker(TerminateWorkerRequest) returns (TerminateWorkerResponse) {}
}
